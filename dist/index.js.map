{"version":3,"sources":["decorators/Component.js","decorators/index.js","components/Modal/index.js","components/ModalButton/index.js","components/ScrollAnimation/index.js","components/index.js","index.js"],"names":["prefix","Component","tag","target","name","window","customElements","get","define","HTMLElement","html","css","template","document","createElement","innerHTML","Modal","classList","remove","add","_rendered","shadowRoot","appendChild","content","cloneNode","attachShadow","mode","addEventListener","e","id","closeModal","ModalButton","forModal","dataset","for","modalToOpen","getElementById","console","log","openModal","ScrollAnimation","isIntersecting","_observer","unobserve","IntersectionObserver","_onIntersection","threshold","observe"],"mappings":"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","file":"index.js","sourceRoot":"../src","sourcesContent":["const prefix = \"component\";\n\nexport const Component = ({ tag }) => (target) => {\n  const name = `${prefix}-${tag}`;\n  if (!window.customElements.get(name)) {\n    window.customElements.define(name, target);\n  }\n};\n","export * from \"./Component\";\n","import { Component } from \"../../decorators\";\n\nconst html = `\n  <div class=\"backdrop\" id=\"backdrop\"></div>\n  <div class=\"container\">\n    <slot />\n  </div>\n`;\nconst css = `\n  :host {\n    position: fixed;\n    z-index: 999;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  :host(.enter) {\n    animation: enter 0.2s forwards;\n  }\n  :host(.exit) {\n    animation: exit 0.2s forwards;\n  }\n\n  .backdrop {\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    background-color: rgba(0, 0, 0, 0.5);\n  }\n\n  .container {\n    position: absolute;\n    padding: 10px;\n    border-radius: 5px;\n    background-color: #fff;\n  }\n\n  @keyframes enter {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n      display: flex;\n    }\n  }\n  @keyframes exit {\n    from {\n      opacity: 1;\n    }\n    to {\n      opacity: 0;\n      z-index: -1;\n      display: none;\n    }\n  }\n`;\n\nconst template = document.createElement(\"template\");\ntemplate.innerHTML = `<style>${css}</style>${html}`;\n\n@Component({\n  tag: \"modal\"\n})\nclass Modal extends HTMLElement {\n  _rendered = false;\n\n  constructor() {\n    super();\n    this.attachShadow({ mode: \"open\" });\n\n    this.shadowRoot.addEventListener(\"click\", (e) => {\n      switch (e.target.id) {\n        case \"backdrop\": {\n          this.closeModal();\n          break;\n        }\n        default: {\n        }\n      }\n    });\n  }\n\n  openModal = () => {\n    this.classList.remove(\"exit\");\n    this.classList.add(\"enter\");\n    if (!this._rendered) {\n      this._rendered = true;\n      this.shadowRoot.appendChild(template.content.cloneNode(true));\n    }\n  };\n\n  closeModal = () => {\n    this.classList.remove(\"enter\");\n    this.classList.add(\"exit\");\n  };\n}\n","import { Component } from \"../../decorators\";\n\nconst html = `\n  <slot />\n`;\nconst css = ` \n  :host {\n    display: block;\n  }\n`;\n\nconst template = document.createElement(\"template\");\ntemplate.innerHTML = `<style>${css}</style>${html}`;\n\n@Component({\n  tag: \"modal-button\"\n})\nclass ModalButton extends HTMLElement {\n  constructor() {\n    super();\n    this.attachShadow({ mode: \"open\" });\n    this.shadowRoot.appendChild(template.content.cloneNode(true));\n\n    const { for: forModal } = this.dataset;\n\n    this.shadowRoot.addEventListener(\"click\", () => {\n      const modalToOpen = document.getElementById(forModal);\n      console.log(modalToOpen);\n      if (modalToOpen) {\n        modalToOpen.openModal();\n      }\n    });\n  }\n}\n","import { Component } from \"../../decorators\";\n\nconst html = `\n  <slot />\n`;\nconst css = ` \n  :host {\n    display: block;\n    visibility: hidden;\n  }\n\n  :host(.enter) {\n    visibility: visible;\n    animation: 1s animation-surfacing-enter;\n  }\n\n  @keyframes animation-surfacing-enter {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n\nconst template = document.createElement(\"template\");\ntemplate.innerHTML = `<style>${css}</style>${html}`;\n\n@Component({\n  tag: \"scroll-animation\"\n})\nclass ScrollAnimation extends HTMLElement {\n  _observer = null;\n\n  constructor() {\n    super();\n    this.attachShadow({ mode: \"open\" });\n    this.shadowRoot.appendChild(template.content.cloneNode(true));\n\n    this._observer = new IntersectionObserver(this._onIntersection, {\n      threshold: 0.1\n    });\n    this._observer.observe(this);\n  }\n\n  _onIntersection = ([e]) => {\n    if (e && e.isIntersecting) {\n      this._observer.unobserve(this);\n      this.classList.add(\"enter\");\n    }\n  };\n}\n","import \"./Modal\";\nimport \"./ModalButton\";\nimport \"./ScrollAnimation\";\n","import \"./components\";\n"]}